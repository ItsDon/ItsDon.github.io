<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Don</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-13T00:28:01.722Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Don</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 8.0 后台位置限制</title>
    <link href="http://yoursite.com/2018/05/11/android8-background-location-limit/"/>
    <id>http://yoursite.com/2018/05/11/android8-background-location-limit/</id>
    <published>2018-05-11T06:44:14.000Z</published>
    <updated>2018-05-13T00:28:01.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>客户反映在Android 8.0手机上，当应用锁屏或者按Home键处于后台的情况下，Goolgle地图当前实时位置更新失败。</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p> 为了减少电量消耗，Android 8.0会限制处于后台应用获取当前位置的频率，而且不论当前应用的目标SDK是哪个版本。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Important note : As a starting point, we only allow the background app to receive location updates several times an hour. We will continue to optimize the location update interval based on system impact and developer feedback throughout the preview period.</span><br></pre></td></tr></table></figure><p> 处于后台的应用只能实现一个小时几次的实时位置更新,当应用处于前台，实时位置更新功能和低版本的一样，不会受到次数限制。<br> 对于需要频繁获取实时位置的应用，Google对此提供了优化办法。</p><h2 id="优化应用位置获取"><a href="#优化应用位置获取" class="headerlink" title="优化应用位置获取"></a>优化应用位置获取</h2><p>  通过执行下列操作之一来提高位置更新的检索频率：</p><ul><li><p>将应用转至前台</p></li><li><p>在应用中使用<a href="https://developer.android.com/guide/components/services#Foreground" target="_blank" rel="noopener">前台服务</a>.需要注意的是当激活该服务的时候，需要在通知栏显示一个持续的<a href="https://developer.android.com/guide/topics/ui/notifiers/notifications" target="_blank" rel="noopener">通知</a>。</p></li><li><p>使用Geofencing(<code>GeofencingApi</code>接口)之类的API,google对这些api进行了优化以尽可能减少电量消耗。</p></li><li><p>使用被动定位监听器，它可以增加位置更新的获取频率</p></li></ul><h2 id="受影响的APIs"><a href="#受影响的APIs" class="headerlink" title="受影响的APIs"></a>受影响的APIs</h2><p>当应用处于后台，一下api会受到影响</p><ul><li><p>Fused Location Provider(FLP)</p></li><li><p>Geofencing</p></li><li><p>GNSS Measurements and GNSS Navigation Messages`</p></li><li><p>Location Manager</p></li></ul><p><a href="https://developer.android.com/about/versions/oreo/background-location-limits" target="_blank" rel="noopener">官网链接</a></p><a id="more"></a><h2 id="代码实践"><a href="#代码实践" class="headerlink" title="代码实践"></a>代码实践</h2><p> 在应用中启动一个<code>Foreground Service</code>来提高实时位置获取频率，本应用使用<code>Fused Location Provider</code>获取当前定位</p><h3 id="创建一个前台服务"><a href="#创建一个前台服务" class="headerlink" title="创建一个前台服务"></a>创建一个前台服务</h3> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeepAliveService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"KeepAliveService"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        LogUtil.e(TAG,<span class="string">"onCreate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(intent == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">        postNotification();</span><br><span class="line">        LogUtil.e(TAG,<span class="string">"onStartCommand"</span>);</span><br><span class="line">        <span class="keyword">return</span> START_REDELIVER_INTENT;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        LogUtil.e(TAG,<span class="string">"onBind"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">postNotification</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MapActivity.class);</span><br><span class="line">        Intent[] intents = <span class="keyword">new</span> Intent[<span class="number">1</span>];</span><br><span class="line">        intents[<span class="number">0</span>]  = intent;</span><br><span class="line">        PendingIntent notificationPendingIntent = PendingIntent.getActivities(<span class="keyword">this</span>, <span class="number">0</span>, intents, PendingIntent.FLAG_UPDATE_CURRENT);</span><br><span class="line">        Notification notification = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>, NotificationChannel.DEFAULT_CHANNEL_ID)</span><br><span class="line">                .setSmallIcon(R.drawable.pippa_smallicon)</span><br><span class="line">                .setContentTitle(<span class="string">"PiPPA"</span>)</span><br><span class="line">                .setContentIntent(notificationPendingIntent)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        startForeground(<span class="number">110</span>, notification);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        LogUtil.e(TAG,<span class="string">"onDestroy"</span>);</span><br><span class="line">        stopForeground(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在AndroidManifest-xml文件中配置"><a href="#在AndroidManifest-xml文件中配置" class="headerlink" title="在AndroidManifest.xml文件中配置"></a>在AndroidManifest.xml文件中配置</h3> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- custom service : keep alive--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:name</span>=<span class="string">"com.easybike.service.KeepAliveService"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:enabled</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"updateSystem"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在MapActivity中开启服务"><a href="#在MapActivity中开启服务" class="headerlink" title="在MapActivity中开启服务"></a>在MapActivity中开启服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">       ...</span><br><span class="line">        startKeepAliveService();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startKeepAliveService</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            LogUtil.e(TAG,<span class="string">"startKeepAliveService"</span>);</span><br><span class="line">            startForegroundService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, KeepAliveService.class));</span><br><span class="line"><span class="comment">//            startServ、ice(new Intent(this, KeepAliveService.class));</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        ...</span><br><span class="line">        stopService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>,KeepAliveService.class));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;客户反映在Android 8.0手机上，当应用锁屏或者按Home键处于后台的情况下，Goolgle地图当前实时位置更新失败。&lt;/p&gt;
&lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt; 为了减少电量消耗，Android 8.0会限制处于后台应用获取当前位置的频率，而且不论当前应用的目标SDK是哪个版本。&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Important note : As a starting point, we only allow the background app to receive location updates several times an hour. We will continue to optimize the location update interval based on system impact and developer feedback throughout the preview period.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 处于后台的应用只能实现一个小时几次的实时位置更新,当应用处于前台，实时位置更新功能和低版本的一样，不会受到次数限制。&lt;br&gt; 对于需要频繁获取实时位置的应用，Google对此提供了优化办法。&lt;/p&gt;
&lt;h2 id=&quot;优化应用位置获取&quot;&gt;&lt;a href=&quot;#优化应用位置获取&quot; class=&quot;headerlink&quot; title=&quot;优化应用位置获取&quot;&gt;&lt;/a&gt;优化应用位置获取&lt;/h2&gt;&lt;p&gt;  通过执行下列操作之一来提高位置更新的检索频率：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将应用转至前台&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在应用中使用&lt;a href=&quot;https://developer.android.com/guide/components/services#Foreground&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;前台服务&lt;/a&gt;.需要注意的是当激活该服务的时候，需要在通知栏显示一个持续的&lt;a href=&quot;https://developer.android.com/guide/topics/ui/notifiers/notifications&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;通知&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用Geofencing(&lt;code&gt;GeofencingApi&lt;/code&gt;接口)之类的API,google对这些api进行了优化以尽可能减少电量消耗。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用被动定位监听器，它可以增加位置更新的获取频率&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;受影响的APIs&quot;&gt;&lt;a href=&quot;#受影响的APIs&quot; class=&quot;headerlink&quot; title=&quot;受影响的APIs&quot;&gt;&lt;/a&gt;受影响的APIs&lt;/h2&gt;&lt;p&gt;当应用处于后台，一下api会受到影响&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Fused Location Provider(FLP)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Geofencing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GNSS Measurements and GNSS Navigation Messages`&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Location Manager&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.android.com/about/versions/oreo/background-location-limits&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网链接&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
    
      <category term="Android 8.0" scheme="http://yoursite.com/tags/Android-8-0/"/>
    
  </entry>
  
  <entry>
    <title>对Https的认识</title>
    <link href="http://yoursite.com/2018/04/24/Https/"/>
    <id>http://yoursite.com/2018/04/24/Https/</id>
    <published>2018-04-24T11:59:23.000Z</published>
    <updated>2018-04-25T10:03:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文是对Https原理整体的认识，没有对涉及到的技术和知识点展开深层次的阐述，后期有时间的情况下会逐步完善。</p><p>本文涉及到的知识点</p><ul><li>对称加密和非对称加密</li><li>消息摘要</li><li>数字签名</li><li>数字证书(自签名证书和CA证书，自签名证书需要在客户端配置进行校验)</li><li>TLS和SSL</li><li>单向认证和双向认证</li><li>CA根证书</li></ul><h2 id="Http-amp-amp-Https"><a href="#Http-amp-amp-Https" class="headerlink" title="Http &amp;&amp; Https"></a>Http &amp;&amp; Https</h2><p>Http协议通信采用的明文传输内容，传输内容容易被截获，这样就很不安全，所有Https就应用而生了。<br>简单来说，Https = Http + TLS/SSL,在Http的基础上用TLS协议对传输内容进行加密，这样就可以确保网络交互的安全。Http和Http使用的默认端口分别是80和443。<br>Https的安全性体现在三个方面：</p><ul><li>对内容进行加密</li><li>对交互方身份认证</li><li>保证通信数据的完整性</li></ul><h2 id="TLS-SSL加密"><a href="#TLS-SSL加密" class="headerlink" title="TLS/SSL加密"></a>TLS/SSL加密</h2><h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><p>加密和解密采用相同的密钥，优点是速度快，加密效率高；缺点是交互双方协商的密钥一旦泄漏，双方的通信就不再安全</p><h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><p>有一对密钥，分别是公钥和私钥，用公钥加密的内容只能用私钥解密，用私钥加密的内容只能用公钥解密；缺点是速度慢，效率比较低，尤其对于加密数据比较庞大时弊端更加明显</p><h3 id="对称加密-非对称加密"><a href="#对称加密-非对称加密" class="headerlink" title="对称加密 + 非对称加密"></a>对称加密 + 非对称加密</h3><p>TLS协议采用的是对称和非对称结合的方式。首先的疑问是：两种加密方式会不会更慢？答案是不会，因为非对称加密只对对称加密的密钥进行加密，这样客户端就可以放心的把对称加密的密钥发送给服务器了，客户端与服务器短交互的内容是用对称加密的密钥来加密的。</p><a id="more"></a><h3 id="TLS握手流程"><a href="#TLS握手流程" class="headerlink" title="TLS握手流程"></a>TLS握手流程</h3><p>下图是整个握手流程的简图</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/KyXfCrME6UJFk4ma5Y5g5wIeggZaCZ3xKYfzxv54kPQ9q9SKRPHpnVib9MF6MfPcLJgej3wicCVZSicUMNzoVasiaA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="握手流程"></p><h4 id="服务端的证书从哪里来？"><a href="#服务端的证书从哪里来？" class="headerlink" title="服务端的证书从哪里来？"></a>服务端的证书从哪里来？</h4><p>服务端的证书有两个来源</p><ul><li>从CA机构购买</li><li>开发者创建自签名证书</li></ul><p>对于服务端使用自签名证书的情况，客户端需要手动配置，将该证书添加到受信任列表，否则客户端对服务器端认证不通过，这就是单向认证。<br>对于服务端使用CA证书的情况，客户端一般预置了CA的根证书，只要根证书的兼容性够强，它能覆盖的客户端就越多，因此就不用手动添加对服务端的证书信任了。</p><h4 id="单向认证-amp-amp-双向认证"><a href="#单向认证-amp-amp-双向认证" class="headerlink" title="单向认证 &amp;&amp; 双向认证"></a>单向认证 &amp;&amp; 双向认证</h4><p>简单来说，单向认证是客户端验证服务端的身份，双向认证是服务端同时要验证客户端的身份。<br>一般应用都是用的单向认证，只有对于安全级别要求较高的应用或场景才使用双向认证。</p><p>单向认证</p><p><img src="/images/one-way.jpeg" alt="单向认证"></p><p>双向认证</p><p><img src="/images/two-way.jpeg" alt="双向认证"></p><p>以上两张图片来源：<a href="https://blog.csdn.net/duanbokan/article/details/50847612" target="_blank" rel="noopener">Https单向认证和双向认证</a></p><h2 id="消息摘要-–-Message-Digest"><a href="#消息摘要-–-Message-Digest" class="headerlink" title="消息摘要 – Message Digest"></a>消息摘要 – Message Digest</h2><p>消息摘要就是对一个消息进行hash算法而得到的一个固定长度的唯一的字符串，如果消息被篡改了，那么消息摘要也要发生变化，所以消息摘要可以用来验证消息的完整性。常用的hash算法有SHA、MD5等。</p><h2 id="数字签名-–-Signature"><a href="#数字签名-–-Signature" class="headerlink" title="数字签名 – Signature"></a>数字签名 – Signature</h2><p>服务端用私钥对消息摘要加密得到一个加密的字符串，这就是数字签名字符串，数字签名技术由非对称加密和消息摘要组合而成。</p><h2 id="数字证书-–-Certificate"><a href="#数字证书-–-Certificate" class="headerlink" title="数字证书 – Certificate"></a>数字证书 – Certificate</h2><p>数字证书由数字签名、公钥、证书的发布机构、证书的过期日期等信息组成</p><h2 id="根证书-–-Root-Certificate"><a href="#根证书-–-Root-Certificate" class="headerlink" title="根证书 – Root Certificate"></a>根证书 – Root Certificate</h2><p>根证书是CA认证中心签发的数字证书，它能够代表CA机构的身份。 安装根证书代表受CA认证中心的信任。 根证书的签发者是它自己本身，下载根证书说明您对该根证书以下所签发的证书都表示信任。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是对Https原理整体的认识，没有对涉及到的技术和知识点展开深层次的阐述，后期有时间的情况下会逐步完善。&lt;/p&gt;
&lt;p&gt;本文涉及到的知识点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对称加密和非对称加密&lt;/li&gt;
&lt;li&gt;消息摘要&lt;/li&gt;
&lt;li&gt;数字签名&lt;/li&gt;
&lt;li&gt;数字证书(自签名证书和CA证书，自签名证书需要在客户端配置进行校验)&lt;/li&gt;
&lt;li&gt;TLS和SSL&lt;/li&gt;
&lt;li&gt;单向认证和双向认证&lt;/li&gt;
&lt;li&gt;CA根证书&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Http-amp-amp-Https&quot;&gt;&lt;a href=&quot;#Http-amp-amp-Https&quot; class=&quot;headerlink&quot; title=&quot;Http &amp;amp;&amp;amp; Https&quot;&gt;&lt;/a&gt;Http &amp;amp;&amp;amp; Https&lt;/h2&gt;&lt;p&gt;Http协议通信采用的明文传输内容，传输内容容易被截获，这样就很不安全，所有Https就应用而生了。&lt;br&gt;简单来说，Https = Http + TLS/SSL,在Http的基础上用TLS协议对传输内容进行加密，这样就可以确保网络交互的安全。Http和Http使用的默认端口分别是80和443。&lt;br&gt;Https的安全性体现在三个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对内容进行加密&lt;/li&gt;
&lt;li&gt;对交互方身份认证&lt;/li&gt;
&lt;li&gt;保证通信数据的完整性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;TLS-SSL加密&quot;&gt;&lt;a href=&quot;#TLS-SSL加密&quot; class=&quot;headerlink&quot; title=&quot;TLS/SSL加密&quot;&gt;&lt;/a&gt;TLS/SSL加密&lt;/h2&gt;&lt;h3 id=&quot;对称加密&quot;&gt;&lt;a href=&quot;#对称加密&quot; class=&quot;headerlink&quot; title=&quot;对称加密&quot;&gt;&lt;/a&gt;对称加密&lt;/h3&gt;&lt;p&gt;加密和解密采用相同的密钥，优点是速度快，加密效率高；缺点是交互双方协商的密钥一旦泄漏，双方的通信就不再安全&lt;/p&gt;
&lt;h3 id=&quot;非对称加密&quot;&gt;&lt;a href=&quot;#非对称加密&quot; class=&quot;headerlink&quot; title=&quot;非对称加密&quot;&gt;&lt;/a&gt;非对称加密&lt;/h3&gt;&lt;p&gt;有一对密钥，分别是公钥和私钥，用公钥加密的内容只能用私钥解密，用私钥加密的内容只能用公钥解密；缺点是速度慢，效率比较低，尤其对于加密数据比较庞大时弊端更加明显&lt;/p&gt;
&lt;h3 id=&quot;对称加密-非对称加密&quot;&gt;&lt;a href=&quot;#对称加密-非对称加密&quot; class=&quot;headerlink&quot; title=&quot;对称加密 + 非对称加密&quot;&gt;&lt;/a&gt;对称加密 + 非对称加密&lt;/h3&gt;&lt;p&gt;TLS协议采用的是对称和非对称结合的方式。首先的疑问是：两种加密方式会不会更慢？答案是不会，因为非对称加密只对对称加密的密钥进行加密，这样客户端就可以放心的把对称加密的密钥发送给服务器了，客户端与服务器短交互的内容是用对称加密的密钥来加密的。&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
    
      <category term="Https" scheme="http://yoursite.com/tags/Https/"/>
    
  </entry>
  
  <entry>
    <title>WindowManager&amp;BadTokenException:Unable to add window</title>
    <link href="http://yoursite.com/2018/04/23/Unable-to-add-window/"/>
    <id>http://yoursite.com/2018/04/23/Unable-to-add-window/</id>
    <published>2018-04-23T06:24:23.000Z</published>
    <updated>2018-04-23T07:08:02.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="详细的异常log"><a href="#详细的异常log" class="headerlink" title="详细的异常log"></a>详细的异常log</h4><p><img src="/images/BTE.jpeg" alt="BadTokenException"></p><h4 id="发生场景"><a href="#发生场景" class="headerlink" title="发生场景"></a>发生场景</h4><p>   在异步任务执行完成后，调用了show dialog.</p><h4 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h4><p>当异步任务完成后，调用该任务的activity可能处于被销毁或已销毁的阶段，即 <code>new Dialog(context)</code>所需的contex已不复存在。</p><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>在调用dialog的时候判断activity是否isFinishing()<br>    <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!isFinishing())&#123;</span><br><span class="line">    showDialog();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p> <a id="more"></a><h4 id="问题详细分析"><a href="#问题详细分析" class="headerlink" title="问题详细分析"></a>问题详细分析</h4><p>网上找到了一篇Blog,对这种情况进行了简洁明了的说明，内容如下</p><p>Android – Displaying Dialogs From Background Threads</p><p>Having threads to do some heavy lifting and long processing in the background is pretty standard stuff. Very often you would want to notify or prompt the user after the background task has finished by displaying a Dialog.</p><p>The displaying of the Dialog has to happen on the UI thread, so you would do that either in the Handler object for the thread or in the onPostExecute method of an AsyncTask (which is a thread as well, just an easier way of implementing it). That is a textbook way of doing this and you would think that pretty much nothing wrong could go with this.</p><p>Surprisingly I found out that something CAN actually go wrong with this. After Google updated the Android Market and started giving crash reports to the developers I received the following exception:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">android.view.WindowManager$BadTokenException: Unable to add window — token android.os.BinderProxy@<span class="number">447</span>a6748 is not valid; is your activity running?</span><br><span class="line">at android.view.ViewRoot.setView(ViewRoot.java:<span class="number">468</span>)</span><br><span class="line">at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:<span class="number">177</span>)</span><br><span class="line">at android.view.WindowManagerImpl.addView(WindowManagerImpl.java:<span class="number">91</span>)</span><br><span class="line">at android.view.Window$LocalWindowManager.addView(Window.java:<span class="number">424</span>)</span><br><span class="line">at android.app.Dialog.show(Dialog.java:<span class="number">239</span>)</span><br><span class="line">at android.app.Activity.showDialog(Activity.java:<span class="number">2488</span>)</span><br><span class="line">…</span><br><span class="line">at android.os.Handler.dispatchMessage(Handler.java:<span class="number">99</span>)</span><br><span class="line">…</span><br></pre></td></tr></table></figure></p><p>I only got a couple of these exceptions from thousands of installs, so I knew that was not anything that happens regularly or that it was easy to replicate.</p><p>Looking at the stack trace above it gives us a pretty good idea why it failed. It started in the Handler object, which naturally was called by a background thread after it finished its processing. The Handler instance tried to show a Dialog and before it could show it, it tried to set the View for it and then it failed with:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android.view.WindowManager$BadTokenException: Unable to add window — token android.os.BinderProxy@447a6748 is not valid; is your activity running?</span><br></pre></td></tr></table></figure></p><p>The 447a6748 number is just a memory address of an object that no longer exists.</p><p>Note- do not get hung up on the exact number. It would be different with every execution.</p><p>Now we know why the application crashed, the only thing left is to figure out what caused it?</p><p>We know that background threads execute independently of the main UI thread. That means that the user could be interacting with the application during the time that the thread is doing its work under the covers. Well, what happens if the user hits the “Back” button on the device while the background thread is running and what happens to the Dialog that this thread is supposed to show? Well, if the timing is right the application will most likely crash with the above described error.</p><p>In other words what happens is that the Activity will be going through its destruction when the background thread finishes its work and tries to show a Dialog.</p><p>In this case it is almost certain that this should have been handled by the Virtual Machine. It should have recognized the fact that the Activity is in the process of finishing and not even attempted to show the Dialog. This is an oversight of the Google developers and it will probably be fixed some time in the future, but in the meantime the burden is on us to take care of this.</p><p>The fix to this is pretty simple. Just test if the Activity is going through its finishing phase before displaying the Dialog:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Handler myHandler = <span class="keyword">new</span> Handler() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">    <span class="keyword">case</span> DISPLAY_DLG:</span><br><span class="line">        <span class="keyword">if</span> (!isFinishing()) &#123;</span><br><span class="line">        showDialog(MY_DIALOG);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><a href="http://dimitar.me/android-displaying-dialogs-from-background-threads/" target="_blank" rel="noopener">原文链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;详细的异常log&quot;&gt;&lt;a href=&quot;#详细的异常log&quot; class=&quot;headerlink&quot; title=&quot;详细的异常log&quot;&gt;&lt;/a&gt;详细的异常log&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/BTE.jpeg&quot; alt=&quot;BadTokenException&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;发生场景&quot;&gt;&lt;a href=&quot;#发生场景&quot; class=&quot;headerlink&quot; title=&quot;发生场景&quot;&gt;&lt;/a&gt;发生场景&lt;/h4&gt;&lt;p&gt;   在异步任务执行完成后，调用了show dialog.&lt;/p&gt;
&lt;h4 id=&quot;原因分析&quot;&gt;&lt;a href=&quot;#原因分析&quot; class=&quot;headerlink&quot; title=&quot;原因分析&quot;&gt;&lt;/a&gt;原因分析&lt;/h4&gt;&lt;p&gt;当异步任务完成后，调用该任务的activity可能处于被销毁或已销毁的阶段，即 &lt;code&gt;new Dialog(context)&lt;/code&gt;所需的contex已不复存在。&lt;/p&gt;
&lt;h4 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h4&gt;&lt;p&gt;在调用dialog的时候判断activity是否isFinishing()&lt;br&gt;    &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!isFinishing())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    showDialog();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
    
      <category term="Exception" scheme="http://yoursite.com/tags/Exception/"/>
    
      <category term="Dialog" scheme="http://yoursite.com/tags/Dialog/"/>
    
  </entry>
  
  <entry>
    <title>Redex  ---  Android 字节码优化器</title>
    <link href="http://yoursite.com/2018/04/19/Redex%EF%BC%9AAndrod%20%E5%AD%97%E8%8A%82%E7%A0%81%E4%BC%98%E5%8C%96%E5%99%A8/"/>
    <id>http://yoursite.com/2018/04/19/Redex：Androd 字节码优化器/</id>
    <published>2018-04-19T02:52:20.000Z</published>
    <updated>2018-04-19T05:53:43.679Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Redex简介"><a href="#Redex简介" class="headerlink" title="Redex简介"></a>Redex简介</h3><p> Redex是一款Facebook公司开发的Android字节码(dex)优化器.它提供了一个读写和分析.dex文件的框架，以及一系列基于该框架优化字节码的优化通道。利用Redex优化过的apk可以比之前的包体积更小，运行速度更快。</p><p> Redex已在<a href="https://github.com/facebook/redex" target="_blank" rel="noopener">github</a>上开源，开发语言是C++.</p><h3 id="Redex实践（Mac系统）"><a href="#Redex实践（Mac系统）" class="headerlink" title="Redex实践（Mac系统）"></a>Redex实践（Mac系统）</h3><h4 id="安装Xcode命令行工具"><a href="#安装Xcode命令行工具" class="headerlink" title="安装Xcode命令行工具"></a>安装Xcode命令行工具</h4><p> 打开shell,输入一下命令</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><p> 安装成功后，输入<code>xcode-select -v</code>进行验证</p> <a id="more"></a><h4 id="使用homebrew安装需要的依赖包"><a href="#使用homebrew安装需要的依赖包" class="headerlink" title="使用homebrew安装需要的依赖包"></a>使用<code>homebrew</code>安装需要的依赖包</h4><p> homebrew是一个mac系统上的包管理工具，输入以下命令：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install autoconf automake libtool python3</span><br><span class="line">brew install boost jsoncpp</span><br></pre></td></tr></table></figure></p><h4 id="Download-Build-and-Install"><a href="#Download-Build-and-Install" class="headerlink" title="Download,Build and Install"></a>Download,Build and Install</h4><p> 从github下载Redex<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir redex</span><br><span class="line">git clone https://github.com/facebook/redex.git .</span><br></pre></td></tr></table></figure></p><p> 利用<code>autoconf</code>和<code>make</code>编译Redex<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># if you&apos;re using gcc,please use gcc-4.9</span><br><span class="line">autoreconf -ivf &amp;&amp; ./configure &amp;&amp; make -j4</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></p><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><p>一条语句搞定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redex path/to/your.apk -o path/to/output.apk</span><br></pre></td></tr></table></figure></p><p>Badly, An error occured.Just like below<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> $ redex ~/Desktop/apk/pippa/dev/FlyBike-jap-release.apk -o outputt.apk </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/tmp/redex.SAHD58/redex.py&quot;, line 687, in &lt;module&gt;</span><br><span class="line">    run_redex(args)</span><br><span class="line">  File &quot;/tmp/redex.SAHD58/redex.py&quot;, line 633, in run_redex</span><br><span class="line">    args.keyalias, args.keypass, args.ignore_zipalign, args.page_align_libs)</span><br><span class="line">  File &quot;/tmp/redex.SAHD58/redex.py&quot;, line 292, in create_output_apk</span><br><span class="line">    zipalign(unaligned_apk_path, output_apk_path, ignore_zipalign, page_align)</span><br><span class="line">  File &quot;/tmp/redex.SAHD58/redex.py&quot;, line 248, in zipalign</span><br><span class="line">    subprocess.check_call(zipalign + args)</span><br><span class="line">  File &quot;/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py&quot;, line 286, in check_call</span><br><span class="line">    retcode = call(*popenargs, **kwargs)</span><br><span class="line">  File &quot;/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py&quot;, line 267, in call</span><br><span class="line">    with Popen(*popenargs, **kwargs) as p:</span><br><span class="line">  File &quot;/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py&quot;, line 709, in __init__</span><br><span class="line">    restore_signals, start_new_session)</span><br><span class="line">  File &quot;/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py&quot;, line 1344, in _execute_child</span><br><span class="line">    raise child_exception_type(errno_num, err_msg, err_filename)</span><br><span class="line">FileNotFoundError: [Errno 2] No such file or directory: &apos;zipalign&apos;: &apos;zipalign&apos;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Redex简介&quot;&gt;&lt;a href=&quot;#Redex简介&quot; class=&quot;headerlink&quot; title=&quot;Redex简介&quot;&gt;&lt;/a&gt;Redex简介&lt;/h3&gt;&lt;p&gt; Redex是一款Facebook公司开发的Android字节码(dex)优化器.它提供了一个读写和分析.dex文件的框架，以及一系列基于该框架优化字节码的优化通道。利用Redex优化过的apk可以比之前的包体积更小，运行速度更快。&lt;/p&gt;
&lt;p&gt; Redex已在&lt;a href=&quot;https://github.com/facebook/redex&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github&lt;/a&gt;上开源，开发语言是C++.&lt;/p&gt;
&lt;h3 id=&quot;Redex实践（Mac系统）&quot;&gt;&lt;a href=&quot;#Redex实践（Mac系统）&quot; class=&quot;headerlink&quot; title=&quot;Redex实践（Mac系统）&quot;&gt;&lt;/a&gt;Redex实践（Mac系统）&lt;/h3&gt;&lt;h4 id=&quot;安装Xcode命令行工具&quot;&gt;&lt;a href=&quot;#安装Xcode命令行工具&quot; class=&quot;headerlink&quot; title=&quot;安装Xcode命令行工具&quot;&gt;&lt;/a&gt;安装Xcode命令行工具&lt;/h4&gt;&lt;p&gt; 打开shell,输入一下命令&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xcode-select --install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 安装成功后，输入&lt;code&gt;xcode-select -v&lt;/code&gt;进行验证&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
    
      <category term="Performance Optimization" scheme="http://yoursite.com/tags/Performance-Optimization/"/>
    
  </entry>
  
  <entry>
    <title>git 常用命令</title>
    <link href="http://yoursite.com/2018/04/02/Git%20common/"/>
    <id>http://yoursite.com/2018/04/02/Git common/</id>
    <published>2018-04-02T14:25:23.000Z</published>
    <updated>2018-04-03T01:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>工作中最常用的git命令</p><p> 查看当前分支改动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></p><h3 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h3><p>列出当前项目本地分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></p><p>列出当前项目所有分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure></p><p>基于当前分支创建分支x<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch x</span><br></pre></td></tr></table></figure></p><p>删除本地分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -D x</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>创建并切换到分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -b x</span><br></pre></td></tr></table></figure></p><p>删除远端分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete x</span><br></pre></td></tr></table></figure></p><p>撤销某个文件的改动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout x</span><br></pre></td></tr></table></figure></p><p>撤销所有文件改动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout .</span><br></pre></td></tr></table></figure></p><p>撤销git add .操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD .</span><br></pre></td></tr></table></figure></p><p>push所有分支到远端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --all</span><br></pre></td></tr></table></figure></p><p> 在本地创建与远端对应的名称一样的分支<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --track origin/x</span><br></pre></td></tr></table></figure></p><p>  在本地创建与远端对应的名称为xx的分支<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout --track xx origin/x</span><br></pre></td></tr></table></figure></p><h3 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h3><p>暂存当前分支的改动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure></p><p>  恢复当前分支暂存的改动<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure></p><h3 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h3><p>查看当前项目的所有tag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag</span><br></pre></td></tr></table></figure></p><p>查看某个tag信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show tagName</span><br></pre></td></tr></table></figure></p><p>  给当前分支的当前commit打标签，方便以后版本回退<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -a v1.1.1 -m &quot;publish version 1.1.1&quot;</span><br></pre></td></tr></table></figure></p><p> 回退到某个commit对应的版本<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard xx (xx代表某次commit的hash值的前6位)</span><br></pre></td></tr></table></figure></p><p> 提交所有tag到仓库<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --all tags</span><br></pre></td></tr></table></figure></p><p> 提交某个tag到远端<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin tagName</span><br></pre></td></tr></table></figure></p><p>删除本地tag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -d tagName</span><br></pre></td></tr></table></figure></p><p> 删除远端tag<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :refs/tags/xx</span><br></pre></td></tr></table></figure></p><h3 id="remote"><a href="#remote" class="headerlink" title="remote"></a>remote</h3><p>查看当前git仓库远端地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure></p><p>删除当前git仓库的远端地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure></p><p>为本地仓库添加远端地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@xxx</span><br></pre></td></tr></table></figure></p><p>修改当前仓库的远程地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote set-url origin git@xxx</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中最常用的git命令&lt;/p&gt;
&lt;p&gt; 查看当前分支改动&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git status&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;branch&quot;&gt;&lt;a href=&quot;#branch&quot; class=&quot;headerlink&quot; title=&quot;branch&quot;&gt;&lt;/a&gt;branch&lt;/h3&gt;&lt;p&gt;列出当前项目本地分支&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;列出当前项目所有分支&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch -a&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;基于当前分支创建分支x&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;删除本地分支&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch -D x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Upgrade Android Studio</title>
    <link href="http://yoursite.com/2018/04/02/Upgrade-Android-Studio/"/>
    <id>http://yoursite.com/2018/04/02/Upgrade-Android-Studio/</id>
    <published>2018-04-02T13:50:23.000Z</published>
    <updated>2018-04-02T14:23:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Android Studio版本升级操作流程如下：</p><h4 id="升级前"><a href="#升级前" class="headerlink" title="升级前"></a>升级前</h4><p><img src="/images/upgrade-as-1.png" alt="image1"></p><a id="more"></a><p><img src="/images/upgrade-as-2.png" alt="image2"><br><img src="/images/upgrade-as-3.png" alt="image3"></p><h4 id="升级后"><a href="#升级后" class="headerlink" title="升级后"></a>升级后</h4><p><img src="/images/upgrade-as-4.png" alt="image4"><br><img src="/images/upgrade-as-5.png" alt="image5"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android Studio版本升级操作流程如下：&lt;/p&gt;
&lt;h4 id=&quot;升级前&quot;&gt;&lt;a href=&quot;#升级前&quot; class=&quot;headerlink&quot; title=&quot;升级前&quot;&gt;&lt;/a&gt;升级前&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;/images/upgrade-as-1.png&quot; alt=&quot;image1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>基于Hexo搭建Github博客</title>
    <link href="http://yoursite.com/2018/03/30/Create-blog-by-Hexo/"/>
    <id>http://yoursite.com/2018/03/30/Create-blog-by-Hexo/</id>
    <published>2018-03-30T09:23:23.000Z</published>
    <updated>2018-04-02T13:47:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>安装 <code>hexo</code>之前需要先安装<code>git</code>和<code>node.js</code>,详细安装见<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo官网</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>经过以上步骤的操作，就可以在浏览器中查看静态的blog模版，默系统认分配4000端口，完整地址：<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><h3 id="配置站点-config-yml文件"><a href="#配置站点-config-yml文件" class="headerlink" title="配置站点_config.yml文件"></a>配置站点_config.yml文件</h3><p>使用<code>git</code>将站点部署到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:ItsDon/ItsDon.github.io.git</span><br></pre></td></tr></table></figure><p>然后执行以下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>安装完成后，就可以在<code>_posts</code>目录下添加markdown文件作为每一篇博客，通过以下语句来生成和部署我们的静态站点</p><p>清空缓存,即删除<code>public</code>目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></p><p>重新生成<code>public</code>目录，该目录下的放的就是博客所有的页面及相关的<code>css</code> ，<code>js</code>等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure></p><p>通过<code>git</code>将<code>.deploy_git</code>目录下的文件部署到远端仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p> <a id="more"></a><h3 id="更换theme"><a href="#更换theme" class="headerlink" title="更换theme"></a>更换theme</h3><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a>提供了大量的theme样式，<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">NEXT</a>是目前比较流行的一款主题</p><h4 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h4><p>clone next 项目到<code>themes</code>目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h4 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h4><p>  在站点_config.yml中更换主题</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h3&gt;&lt;p&gt;安装 &lt;code&gt;hexo&lt;/code&gt;之前需要先安装&lt;code&gt;git&lt;/code&gt;和&lt;code&gt;node.js&lt;/code&gt;,详细安装见&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo官网&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo init blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd blog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;经过以上步骤的操作，就可以在浏览器中查看静态的blog模版，默系统认分配4000端口，完整地址：&lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://localhost:4000/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置站点-config-yml文件&quot;&gt;&lt;a href=&quot;#配置站点-config-yml文件&quot; class=&quot;headerlink&quot; title=&quot;配置站点_config.yml文件&quot;&gt;&lt;/a&gt;配置站点_config.yml文件&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;git&lt;/code&gt;将站点部署到远程仓库&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo: git@github.com:ItsDon/ItsDon.github.io.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行以下命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，就可以在&lt;code&gt;_posts&lt;/code&gt;目录下添加markdown文件作为每一篇博客，通过以下语句来生成和部署我们的静态站点&lt;/p&gt;
&lt;p&gt;清空缓存,即删除&lt;code&gt;public&lt;/code&gt;目录&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重新生成&lt;code&gt;public&lt;/code&gt;目录，该目录下的放的就是博客所有的页面及相关的&lt;code&gt;css&lt;/code&gt; ，&lt;code&gt;js&lt;/code&gt;等&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;git&lt;/code&gt;将&lt;code&gt;.deploy_git&lt;/code&gt;目录下的文件部署到远端仓库&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tech" scheme="http://yoursite.com/categories/Tech/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://yoursite.com/2018/03/30/hello-world/"/>
    <id>http://yoursite.com/2018/03/30/hello-world/</id>
    <published>2018-03-30T04:23:23.000Z</published>
    <updated>2018-04-02T13:46:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><a id="more"></a><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
